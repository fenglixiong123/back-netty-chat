<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.flx.chat</groupId>
    <artifactId>netty-chat-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>netty-chat-register</module>
    </modules>

    <properties>
        <jdk.version>1.8</jdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.jar.plugin.version>3.0.2</maven.jar.plugin.version>
        <maven.compiler.piugin.version>3.7.0</maven.compiler.piugin.version>

        <apache.lang3.version>3.3.2</apache.lang3.version>
        <apache.io.version>2.8.0</apache.io.version>
        <apache.logging.version>1.2</apache.logging.version>
        <apache.beanutils.version>1.9.4</apache.beanutils.version>
        <apache.collections.version>3.2.2</apache.collections.version>
        <alibaba.fastjson.version>1.2.51</alibaba.fastjson.version>
        <alibaba.druid.version>1.1.12</alibaba.druid.version>
        <cglib.version>3.3.0</cglib.version>
        <flyway.version>5.2.4</flyway.version>
        <http.core.version>4.4.13</http.core.version>
        <http.client.version>4.5.12</http.client.version>
        <itextpdf.version>5.5.10</itextpdf.version>
        <itext.asian.version>5.2.0</itext.asian.version>
        <jxl.version>2.6.10</jxl.version>
        <jackson.version>2.9.7</jackson.version>
        <json.path.verson>2.4.0</json.path.verson>
        <kafka.version>2.2.0.RELEASE</kafka.version>
        <mybatis.version>2.1.2</mybatis.version>
        <mybatis.plus.version>3.3.2</mybatis.plus.version>
        <netty.all.version>4.1.20.Final</netty.all.version>
        <ok.http.version>4.2.0</ok.http.version>
        <quartz.version>2.2.3</quartz.version>
        <spring.log4j2.version>2.3.2.RELEASE</spring.log4j2.version>
        <swagger.version>2.9.2</swagger.version>
        <swagger.ui.version>1.8.4</swagger.ui.version>
        <spring.boot.version>2.1.0.RELEASE</spring.boot.version>
        <spring.cloud.version>Hoxton.SR10</spring.cloud.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.flx.chat</groupId>
                <artifactId>netty-chat-common</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <!--netty网络-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.all.version}</version>
            </dependency>
            <!--http请求-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${http.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${http.client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${ok.http.version}</version>
            </dependency>
            <!--quartz定时器-->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <!--spring-kafka-->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <!--mybatis-plus-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>
            <!--flyway-core-->
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${alibaba.druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba.fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json.path.verson}</version>
            </dependency>
            <!--excel-->
            <dependency>
                <groupId>net.sourceforge.jexcelapi</groupId>
                <artifactId>jxl</artifactId>
                <version>${jxl.version}</version>
            </dependency>
            <!--pdf.template-->
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${itextpdf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itext-asian</artifactId>
                <version>${itext.asian.version}</version>
            </dependency>
            <!--cglib-->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <!--apache-io-->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache.io.version}</version>
            </dependency>
            <!--apache-logging-->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${apache.logging.version}</version>
            </dependency>
            <!--apache-beanutils-->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${apache.beanutils.version}</version>
            </dependency>
            <!--apache-lang3-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.lang3.version}</version>
            </dependency>
            <!--apache-collections-->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${apache.collections.version}</version>
            </dependency>
            <!--swagger-ui-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger.ui.version}</version>
            </dependency>
            <!--spring-log4j2-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring.log4j2.version}</version>
            </dependency>
            <!--spring-boot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring-cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <!--设置子类工程的maven打包插件版本管理-->
        <pluginManagement>
            <plugins>
                <!--第一种情况，生成单个的jar文件-->
                <!--看情况使用，小项目可以使用-->
                <!--常规打包，flat jar，打出来的jar很大，不易于修改部分文件后增量发布 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.3.2.RELEASE</version>
                    <configuration>
                        <!--打包生成方式 ZIP 、JAR 、WAR、 NONE-->
                        <!--<layout>JAR</layout>-->
                        <!--指定主类-->
                        <!--<mainClass>com.flx.springboot.scaffold.application.MainApplication</mainClass>-->
                        <!-- 作用:项目打成jar的同时将本地jar包也引入进去,这里的本地jar指的是类路径中添加的jar包-->
                        <!--<includeSystemScope>true</includeSystemScope>-->
                    </configuration>
                    <!--最主要goal就是repackage，其在Maven的package生命周期阶段，能够将mvn package生成的软件包，再次打包为可执行的软件包，并将mvn package生成的软件包重命名为*.original。-->
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--第二种情况启动项和依赖包分离-->
                <!--打成jar时，设定manifest的参数，比如指定运行的Main class，还有依赖的jar包，加入classpath中-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <!-- MANIFEST.MF 中 Class-Path 加入前缀 -->
                                <classpathPrefix>/lib</classpathPrefix>
                                <!--指定入口类 -->
                                <mainClass>com.flx.springboot.scaffold.application.MainApplication</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!--复制依赖的jar包到指定的文件夹里，相当于：mvn dependency:copy-dependencies -DoutputDirectory=lib-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!--第三种情况，提供给第三方使用，包含所有依赖的普通jar-->
                <!--用于把多个jar包，打成1个jar包,一般Java项目都会依赖其他第三方jar包，最终打包时，希望把其他jar包包含在一个jar包里-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.4.3</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <transformers>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                        <manifestEntries>
                                            <Main-Class>com.flx.springboot.scaffold.application.MainApplication</Main-Class>
                                            <X-Compile-Source-JDK>1.8</X-Compile-Source-JDK>
                                            <X-Compile-Target-JDK>1.8</X-Compile-Target-JDK>
                                        </manifestEntries>
                                    </transformer>
                                </transformers>
                                <createDependencyReducedPom>false</createDependencyReducedPom>
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--编译java源码-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.piugin.version}</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                    </configuration>
                </plugin>
                <!--发布java源码-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.1.2</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <!--目前在使用的相关插件,包含打包、编译、源码-->

        <plugins>
            <!--Springboot的打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--编译java源码.java到.class文件-->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!--发布java源码-->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>