
server:
  port: 8888
spring:
  application:
    name: netty-chat-gateway
  cloud:
#    nacos:
#      discovery:
#        server-addr: 127.0.0.1:8848
#      config:
#        server-addr: 127.0.0.1:8848
#        file-extension: yaml
    #开启自动路由
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: netty-chat-auth  #权限
          uri: lb://netty-chat-auth #转发的地址,写服务名称
          predicates:
            - Path=/web/auth/**,/web/oauth/** #判断匹配条件,即地址带有/auth/**的请求,会转发至lb:netty-chat-auth
          filters:
            - StripPrefix=1 #去除前缀个数,请求 http://web/auth 转发到 http://127.0.0.1:8001/auth
        - id: group
          uri: lb://netty-chat-group
          predicates:
            - Path=/web/group-service/**
          filters:
            - StripPrefix=1
        - id: message
          uri: lb://netty-chat-message
          predicates:
            - Path=/web/message-service/**
          filters:
            - StripPrefix=1
      globalcors:
        cors-configurations: #全局允许跨域访问
          '[/**]':
            allow-credentials: true
            allowed-origins: "*"
            allowed-headers: "*"
            allowed-methods:
              - OPTIONS
              - GET
              - POST
              - PUT
              - DELETE
      #默认的异常处理
      default-filters:
        - name: Hystrix
          args:
            name: default
            fallbackUri: 'forward:/defaultFallback'
  #redis配置
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    timeout: 60000

# 默认熔断超时时间5s
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 5000

# 重写url过滤器
#- RewritePath=/product-service/(?<segment>.*), /$\{segment}